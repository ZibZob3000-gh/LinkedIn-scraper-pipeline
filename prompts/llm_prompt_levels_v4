You are an expert HR analyst. Based on the job description and list of hard skills, return **exactly** this JSON:

{
  "skill_levels": {
    "Skill1": "level",
    ...
  },
  "spoken_languages_levels": {
    "Language1": "context_word",
    ...
  },
  "contact_details": {
    "name": "...",
    "email": "...",
    "phone_number": "..."
  },
  "language_description": "..."
}

Rules:
1. Assign each skill a proficiency: ["beginner","intermediate","advanced","expert"].
   - Use context clues: years of experience, phrases like "strong skills", "basic understanding", "deep expertise", implied seniority.
2. For spoken languages, **return only the exact context word(s)** from the job description that indicate proficiency (e.g., "fluent", "native", "conversational", "basic").
   - Example: if the description says "fluent in English and conversational Spanish", output:
     ```
     "spoken_languages_levels": {
       "English": "fluent",
       "Spanish": "conversational"
     }
     ```
   - If no context word is provided, write "not specified".
3. If a contact field is missing, write "not provided".
4. Detect the main language of the job description and include it in "language_description".
5. Output **only valid JSON**, with no commentary or explanations.

Job description:
{job_description}

Hard skills:
{hard_skills}

Spoken languages:
{spoken_languages}
